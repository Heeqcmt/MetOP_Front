[{"/Users/bermau/Projects/opie_front/src/index.js":"1","/Users/bermau/Projects/opie_front/src/Header.js":"2","/Users/bermau/Projects/opie_front/src/Footer.js":"3","/Users/bermau/Projects/opie_front/src/Main.js":"4","/Users/bermau/Projects/opie_front/src/mainComponent/selector.js":"5","/Users/bermau/Projects/opie_front/src/mainComponent/eventBoard.js":"6"},{"size":404,"mtime":1609336912474,"results":"7","hashOfConfig":"8"},{"size":189,"mtime":1609316350481,"results":"9","hashOfConfig":"8"},{"size":189,"mtime":1609316461675,"results":"10","hashOfConfig":"8"},{"size":6394,"mtime":1609713648438,"results":"11","hashOfConfig":"8"},{"size":1497,"mtime":1609503754469,"results":"12","hashOfConfig":"8"},{"size":1613,"mtime":1609787691471,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1werqyu",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/bermau/Projects/opie_front/src/index.js",[],["28","29"],"/Users/bermau/Projects/opie_front/src/Header.js",[],"/Users/bermau/Projects/opie_front/src/Footer.js",[],"/Users/bermau/Projects/opie_front/src/Main.js",["30","31","32","33","34","35"],"import React from \"react\";\nimport Selector from \"./mainComponent/selector\";\nimport EventBoard from \"./mainComponent/eventBoard\";\n//sample data\n// const testEventArray = [\n//     {\n//         province:\"Ontario\",\n//         id:0,\n//         Info:{\n//             date:\"some date\",\n//             link:\" some link\",\n//             location: \"some location\",\n//             party:\"Liberal\",\n//             title: \"some title\"\n//         }\n//     },\n//     {\n//         province:\"Ontario\",\n//         id:0,\n//         Info:{\n//             date:\"some date\",\n//             link:\" some link\",\n//             location: \"some location\",\n//             party:\"Conservative\",\n//             title: \"some title\"\n//         }\n//     },\n//     {\n//         province:\"Ontario\",\n//         id:0,\n//         Info:{\n//             date:\"some date\",\n//             link:\" some link\",\n//             location: \"some location\",\n//             party:\"NDP\",\n//             title: \"some title\"\n//         }\n//     },{\n//         province:\"Ontario\",\n//         id:0,\n//         Info:{\n//             date:\"some date\",\n//             link:\" some link\",\n//             location: \"some location\",\n//             party:\"Liberal\",\n//             title: \"some title\"\n//         }\n//     },\n//     {\n//         province:\"Ontario\",\n//         id:0,\n//         Info:{\n//             date:\"some date\",\n//             link:\" some link\",\n//             location: \"some location\",\n//             party:\"Conservative\",\n//             title: \"some title\"\n//         }\n//     },\n//     {\n//         province:\"Ontario\",\n//         id:0,\n//         Info:{\n//             date:\"some date\",\n//             link:\" some link\",\n//             location: \"some location\",\n//             party:\"NDP\",\n//             title: \"some title\"\n//         }\n//     },\n//     {\n//         province:\"Ontario\",\n//         id:0,\n//         Info:{\n//             date:\"some date\",\n//             link:\" some link\",\n//             location: \"some location\",\n//             party:\"Liberal\",\n//             title: \"some title\"\n//         }\n//     },\n//     {\n//         province:\"Ontario\",\n//         id:0,\n//         Info:{\n//             date:\"some date\",\n//             link:\" some link\",\n//             location: \"some location\",\n//             party:\"Conservative\",\n//             title: \"some title\"\n//         }\n//     },\n//     {\n//         province:\"Ontario\",\n//         id:0,\n//         Info:{\n//             date:\"some date\",\n//             link:\" some link\",\n//             location: \"some location\",\n//             party:\"NDP\",\n//             title: \"some title\"\n//         }\n//     },\n//     {\n//         province:\"British Columbia\",\n//         id:0,\n//         Info:{\n//             date:\"some date\",\n//             link:\" some link\",\n//             location: \"some location\",\n//             party:\"Liberal\",\n//             title: \"some title\"\n//         }\n//     },\n//     {\n//         province:\"British Columbia\",\n//         id:0,\n//         Info:{\n//             date:\"some date\",\n//             link:\" some link\",\n//             location: \"some location\",\n//             party:\"Conservative\",\n//             title: \"some title\"\n//         }\n//     },\n//     {\n//         province:\"British Columbia\",\n//         id:0,\n//         Info:{\n//             date:\"some date\",\n//             link:\" some link\",\n//             location: \"some location\",\n//             party:\"NDP\",\n//             title: \"some title\"\n//         }\n//     },\n    \n    \n// ];\n\n\nconst provinceArray = [\n    \"All\",\n    \"Ontario\",\n    \"British Columbia\"\n];\n\nconst partyArray = [\n    \"All\",\n    \"Liberal\",\n    \"Conservative\",\n    \"NDP\"\n];\n\nexport default class Main extends React.Component{\n\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            selectedParty: 'All',\n            selectedProvince: 'All',\n            loading: true,\n            testEventArray: null\n        };\n        this.filteredEvents = null;\n        this.handlePartyChange = this.handlePartyChange.bind(this);\n        this.handleProvinceChange = this.handleProvinceChange.bind(this);\n    }\n\n    handlePartyChange(e){\n        this.setState({selectedParty: e.target.value});\n        \n        \n    }\n    handleProvinceChange(e){\n        this.setState({selectedProvince: e.target.value});\n    \n    }\n\n    async componentDidMount()\n    {\n        const url = \"https://hy2olkyzs9.execute-api.us-east-1.amazonaws.com/default\";\n        const response = await fetch(url);\n        const data = await response.json();\n        this.setState({testEventArray: data});\n        this.filteredEvents = this.state.testEventArray;\n        this.setState({loading:false})\n        \n        \n    }\n    \n    \n    render()\n    {\n\n\n        if(this.state.loading)\n        {\n            return(\n             \n                <div>Loading events</div>\n                \n            )\n        }\n        else\n        {\n            if(this.state.selectedParty == 'All' && this.state.selectedProvince == 'All'){\n                this.filteredEvents = this.state.testEventArray;\n            }\n            else if (this.state.selectedParty != 'All' && this.state.selectedProvince == 'All')\n            {\n                this.filteredEvents = this.state.testEventArray.filter(testEvent => testEvent.Info.party.includes(this.state.selectedParty));\n            }\n            else if (this.state.selectedProvince != 'All' && this.state.selectedParty == 'All')\n            {\n                this.filteredEvents = this.state.testEventArray.filter(testEvent => testEvent.province.includes(this.state.selectedProvince));\n            }\n            else\n            {\n                this.filteredEvents = this.state.testEventArray.filter(testEvent => testEvent.province.includes(this.state.selectedProvince) && testEvent.Info.party.includes(this.state.selectedParty));\n            }\n            \n            return(\n                \n                <>\n                < Selector partyArray ={partyArray} provinceArray = {provinceArray}  {...this.props} onPartyChange = {this.handlePartyChange} onProvinceChange ={this.handleProvinceChange}/>\n                < EventBoard eventArray ={this.filteredEvents}/>\n                <h4>province seleceted : {this.state.selectedProvince} </h4>\n                <h4>party selected: {this.state.selectedParty}</h4>\n                </>\n              \n            );\n        }\n    };\n};\n","/Users/bermau/Projects/opie_front/src/mainComponent/selector.js",[],"/Users/bermau/Projects/opie_front/src/mainComponent/eventBoard.js",["36"],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":208,"column":41,"nodeType":"43","messageId":"44","endLine":208,"endColumn":43},{"ruleId":"41","severity":1,"message":"42","line":208,"column":81,"nodeType":"43","messageId":"44","endLine":208,"endColumn":83},{"ruleId":"41","severity":1,"message":"45","line":211,"column":47,"nodeType":"43","messageId":"44","endLine":211,"endColumn":49},{"ruleId":"41","severity":1,"message":"42","line":211,"column":87,"nodeType":"43","messageId":"44","endLine":211,"endColumn":89},{"ruleId":"41","severity":1,"message":"45","line":215,"column":50,"nodeType":"43","messageId":"44","endLine":215,"endColumn":52},{"ruleId":"41","severity":1,"message":"42","line":215,"column":87,"nodeType":"43","messageId":"44","endLine":215,"endColumn":89},{"ruleId":"46","severity":1,"message":"47","line":21,"column":41,"nodeType":"48","endLine":21,"endColumn":123},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]